{{- if .Values.cnpg.enabled }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Values.cnpg.nameOverride | default (printf "%s-%s" "pg-cluster" (include "cpnConsole.fullname" .)) }}
  labels:
    {{- include "cpnConsole.common.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.cnpg.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  instances: {{ .Values.cnpg.instances }}
  {{- if .Values.cnpg.imageName }}
  imageName: {{ .Values.cnpg.imageName }}
  {{- end }}
  postgresql:
    parameters:
      max_worker_processes: "60"
    pg_hba:
      - {{ printf "%s %s %s %s %s" "host" .Values.cnpg.dbName .Values.cnpg.username "all" "md5" }}
      - {{ printf "%s %s %s %s %s" "host" .Values.cnpg.dbName "streaming_replica" "all" "md5" }}
  bootstrap:
  {{- if eq .Values.cnpg.mode "primary" }}
    initdb:
      database: {{ .Values.cnpg.dbName }}
      owner: {{ .Values.cnpg.username }}
  {{- else if or (eq .Values.cnpg.mode "replica") (eq .Values.cnpg.mode "restore") }}
    recovery:
      source: {{ .Values.cnpg.nameOverride | default (printf "%s-%s" "pg-cluster" (include "cpnConsole.fullname" .)) }}
      database: {{ .Values.cnpg.dbName }}
      owner: {{ .Values.cnpg.username }}
  externalClusters:
  - name: {{ .Values.cnpg.nameOverride | default (printf "%s-%s" "pg-cluster" (include "cpnConsole.fullname" .)) }}
    {{- if or (.Values.cnpg.backup.enabled) (eq .Values.cnpg.mode "restore") }}
    barmanObjectStore:
      destinationPath: {{ .Values.cnpg.backup.destinationPath }}
      endpointURL: {{ .Values.cnpg.backup.endpointURL }}
      {{- if .Values.cnpg.backup.endpointCA.name }}
      endpointCA:
        name: {{ .Values.cnpg.backup.endpointCA.name }}
        key: {{ .Values.cnpg.backup.endpointCA.key }}
      {{- end }}
      s3Credentials:
        accessKeyId:
          name: {{ .Values.cnpg.backup.s3Credentials.secretName | default (printf "%s-%s" "pg-cluster" (include "cpnConsole.fullname" .)) }}
          key: {{ .Values.cnpg.backup.s3Credentials.accessKeyId.key }}
        secretAccessKey:
          name: {{ .Values.cnpg.backup.s3Credentials.secretName | default (printf "%s-%s" "pg-cluster" (include "cpnConsole.fullname" .)) }}
          key: {{ .Values.cnpg.backup.s3Credentials.secretAccessKey.key }}
    {{- end }}
    {{- if eq .Values.cnpg.mode "replica" }}
    connectionParameters:
      host: {{ .Values.cnpg.replica.host }}
      port: {{ .Values.cnpg.replica.port }}
      dbname: {{ .Values.cnpg.dbName }}
      sslmode: prefer
    sslKey:
      name: {{ (printf "%s-%s" .Values.cnpg.nameOverride "replication") | default (printf "%s-%s-%s" (include "cpnConsole.fullname" .) "pg-cluster" "replication") }}
      key: tls.key
    sslCert:
      name: {{ (printf "%s-%s" .Values.cnpg.nameOverride "replication") | default (printf "%s-%s-%s" (include "cpnConsole.fullname" .) "pg-cluster" "replication") }}
      key: tls.crt
    sslRootCert:
      name: {{ (printf "%s-%s" .Values.cnpg.nameOverride "ca") | default (printf "%s-%s-%s" (include "cpnConsole.fullname" .) "pg-cluster" "ca") }}
      key: ca.crt
    {{- end }}
  {{- end }}
  {{- if eq .Values.cnpg.mode "replica" }}
  replica:
    enabled: true
    source: {{ .Values.cnpg.nameOverride | default (printf "%s-%s" "pg-cluster" (include "cpnConsole.fullname" .)) }}
  {{- end }}
  enableSuperuserAccess: {{ .Values.cnpg.enableSuperuserAccess }}
  primaryUpdateStrategy: {{ .Values.cnpg.primaryUpdateStrategy }}
  storage:
    size: {{ .Values.cnpg.pvcSize }}
  {{- if .Values.cnpg.backup.enabled }}
  backup:
    barmanObjectStore:
      destinationPath: {{ .Values.cnpg.backup.destinationPath }}
      endpointURL: {{ .Values.cnpg.backup.endpointURL }}
      endpointCA:
        name: {{ .Values.cnpg.backup.endpointCA.name }}
        key: {{ .Values.cnpg.backup.endpointCA.key }}
      s3Credentials:
        accessKeyId:
          name: {{ .Values.cnpg.backup.s3Credentials.secretName | default (printf "%s-%s" "pg-cluster" (include "cpnConsole.fullname" .)) }}
          key: {{ .Values.cnpg.backup.s3Credentials.accessKeyId.key }}
        secretAccessKey:
          name: {{ .Values.cnpg.backup.s3Credentials.secretName | default (printf "%s-%s" "pg-cluster" (include "cpnConsole.fullname" .)) }}
          key: {{ .Values.cnpg.backup.s3Credentials.secretAccessKey.key }}
    retentionPolicy: {{ .Values.cnpg.backup.retentionPolicy }}
  {{- end }}
{{- end }}
