{{- if .Values.rate_limiter.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "observatorium.labels" (dict "ctx" $ "component" "rate-limiter" ) | nindent 4 }}
  name: {{ include "observatorium.resourceName" (dict "ctx" $ "component" "rate-limiter") }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "observatorium.selectorLabels" (dict "ctx" $ "component" "rate-limiter") | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "observatorium.labels" (dict "ctx" $ "component" "api" ) | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "observatorium.resourceName" (dict "ctx" $ "component" "rate-limiter") }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - env:
        - name: GUBER_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GUBER_K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: GUBER_HTTP_ADDRESS
          value: 0.0.0.0:8080
        - name: GUBER_GRPC_ADDRESS
          value: 0.0.0.0:8081
        - name: GUBER_K8S_POD_PORT
          value: "8081"
        - name: GUBER_K8S_ENDPOINTS_SELECTOR
          value: app.kubernetes.io/name=gubernator
        - name: GUBER_PEER_DISCOVERY_TYPE
          value: k8s
        - name: GUBER_LOG_LEVEL
          value: info
        - name: OTEL_TRACES_EXPORTER
          value: none
        image: ghcr.io/mailgun/gubernator:v2.0.0-rc.36
        imagePullPolicy: IfNotPresent
        name: {{ include "observatorium.resourceName" (dict "ctx" $ "component" "rate-limiter") }}
        ports:
        - containerPort: 8081
          name: grpc
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /v1/HealthCheck
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 1
        resources: {}
      restartPolicy: Always
{{- end }}